'''Application for determining whether one column in a text or several'''
OS: ubuntu 18.04(LTS)
python3: Python 3.7.3

quickstart:
git clone https://github.com/kiranov/ISP_test.git
cd ISP_test
docker build -t my_app:v0.2 /service
docker run -d -p 5000:5000 my_app:v0.2

open in browser: 127.0.0.1:5000

add your document and click on check

to check docker status use: docker ps -a

to stop: docker stop #CONTAINER ID

Идея алгоритма:
Переводим изображение в черно-белый цвет, суммируем по столбцам интенсивность, получаем вектор cуммарной интенсинсивности по столбцам.

Находим максимальную интенсивность, делаем порог, по-которому будем считать, что столбец содержит какую-то информацию(изначально полагали порог 0,99 от максимума интенсивности, затем на данных оптимизирцем параметр)

Проходим по вектору интенсивности, ожидая появления столбца с интенсивностью меньше пороговой, аналогично проходим с конца вектора. На выходе должны получить 2 индекса(left_edge, right_edge), начиная с которых идет содержательная часть документа.

Идем по оставшейся части вектора интенсивности(с left_edge по right_edge), если находим широкий пик интенсивности(по ширине больший заданного параметра), превышающий на всей своей ширине пороговое значение интенсивности, то считаем, что нашли разделитель между столбцами и можем полагать, что столбец не один.

В некоторых документах есть ссылка на сайт, расположенная вдоль вертикальной оси документа, которая может восприниматься, как столбец. Для решения этой проблемы, также храним индексы 2 последовательных пиков интенсивности, если разность между ними больше некоторого порогового значения, то можно считать, что мы имеем дело со столбцом, в противном случае пропускаем этот участок.

Алгоритм плохо работает на разряженных документах из-за того, что устанвливаем фиксированную допустимую границу интенсивности, которая хорошо разделяет плотные документы, но она нечувствительно к разряженным(из-за слабого колебания интенсивности).
 
Примеры работы алгоритма на тестовых данных можно посмотреть в jupyter-notebook test.ipynb, там также приведены графики распределения интенсивности на документах и проведена оптимизация параметров на тестовых данных(полученные параметры используются в алгоритме).

При запуске алгоритма на 60 документах с одним столбцом точность составила: 0.8833333333333333.
При запуске алгоритма на 60 документах с несколькими столбцами точность составила: 0.95.

 

Another variants to start appliacation:
	1)create virtual env(it's unnecessary)
	2)you should install all from requirements.txt
	3)execute command: python3 app.py

	using docker_hub:
		download: docker pull kiranov/my_app:v0.2
		run:docker run -d -p 5000:5000 kiranov/my_app:v0.2
			if necessary to check status: docker ps -a
			to stop: docker stop #CONTAINER ID
		link to docker_hub https://hub.docker.com/repository/docker/kiranov/my_app/general
